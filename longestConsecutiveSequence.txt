12/11/2023

def longestConsecutive(self, nums: List[int]) -> int:
    if len(nums) == 0:
        return 0
    hset = {}


    for i in nums:
        hset[i] = i
    
    sequences = []
    for i in nums:
        if (i-1) not in hset:
            # print(str(i) + " is a new sequence")
            sequences.append(i)
        
    # print(sequences)
    consecutive = 1
    results = []
    for i in sequences:
        while (i+1) in hset:
            consecutive+=1
            i+=1
        
        results.append(consecutive)
        consecutive = 1
    
    # print(results)
    largest = -1
    for i in results:
        if i > largest:
            largest = i
    
    return largest

12/10/2023

class Solution:
    def longestConsecutive(self, nums: List[int]) -> int:
        hset = {}
        for i in nums:
            hset[i] = i


        results = []
        print(hset)
        consecutiveSeq = 0
        for k, v in hset.keys():
            print("k: " + str(k))
            if (k+1) in hset or (k - 1) in hset:
                consecutiveSeq+=1
                print("k in hset")
            else:
                print("k not in hset")
                results.append(consecutiveSeq)
                # consecutiveSeq = 0
       
        largestVal = -1
        print(results)
        for values in results:
            if values > largestVal:
                largestVal = values


        return largestVal